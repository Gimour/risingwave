// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: alltypes.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enum
type AllTypes_EnumType int32

const (
	AllTypes_DEFAULT AllTypes_EnumType = 0
	AllTypes_OPTION1 AllTypes_EnumType = 1
	AllTypes_OPTION2 AllTypes_EnumType = 2
)

// Enum value maps for AllTypes_EnumType.
var (
	AllTypes_EnumType_name = map[int32]string{
		0: "DEFAULT",
		1: "OPTION1",
		2: "OPTION2",
	}
	AllTypes_EnumType_value = map[string]int32{
		"DEFAULT": 0,
		"OPTION1": 1,
		"OPTION2": 2,
	}
)

func (x AllTypes_EnumType) Enum() *AllTypes_EnumType {
	p := new(AllTypes_EnumType)
	*p = x
	return p
}

func (x AllTypes_EnumType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AllTypes_EnumType) Descriptor() protoreflect.EnumDescriptor {
	return file_alltypes_proto_enumTypes[0].Descriptor()
}

func (AllTypes_EnumType) Type() protoreflect.EnumType {
	return &file_alltypes_proto_enumTypes[0]
}

func (x AllTypes_EnumType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AllTypes_EnumType.Descriptor instead.
func (AllTypes_EnumType) EnumDescriptor() ([]byte, []int) {
	return file_alltypes_proto_rawDescGZIP(), []int{0, 0}
}

type AllTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// standard types
	DoubleField        float64                 `protobuf:"fixed64,1,opt,name=double_field,json=doubleField,proto3" json:"double_field,omitempty"`
	FloatField         float32                 `protobuf:"fixed32,2,opt,name=float_field,json=floatField,proto3" json:"float_field,omitempty"`
	Int32Field         int32                   `protobuf:"varint,3,opt,name=int32_field,json=int32Field,proto3" json:"int32_field,omitempty"`
	Int64Field         int64                   `protobuf:"varint,4,opt,name=int64_field,json=int64Field,proto3" json:"int64_field,omitempty"`
	Uint32Field        uint32                  `protobuf:"varint,5,opt,name=uint32_field,json=uint32Field,proto3" json:"uint32_field,omitempty"`
	Uint64Field        uint64                  `protobuf:"varint,6,opt,name=uint64_field,json=uint64Field,proto3" json:"uint64_field,omitempty"`
	Sint32Field        int32                   `protobuf:"zigzag32,7,opt,name=sint32_field,json=sint32Field,proto3" json:"sint32_field,omitempty"`
	Sint64Field        int64                   `protobuf:"zigzag64,8,opt,name=sint64_field,json=sint64Field,proto3" json:"sint64_field,omitempty"`
	Fixed32Field       uint32                  `protobuf:"fixed32,9,opt,name=fixed32_field,json=fixed32Field,proto3" json:"fixed32_field,omitempty"`
	Fixed64Field       uint64                  `protobuf:"fixed64,10,opt,name=fixed64_field,json=fixed64Field,proto3" json:"fixed64_field,omitempty"`
	Sfixed32Field      int32                   `protobuf:"fixed32,11,opt,name=sfixed32_field,json=sfixed32Field,proto3" json:"sfixed32_field,omitempty"`
	Sfixed64Field      int64                   `protobuf:"fixed64,12,opt,name=sfixed64_field,json=sfixed64Field,proto3" json:"sfixed64_field,omitempty"`
	BoolField          bool                    `protobuf:"varint,13,opt,name=bool_field,json=boolField,proto3" json:"bool_field,omitempty"`
	StringField        string                  `protobuf:"bytes,14,opt,name=string_field,json=stringField,proto3" json:"string_field,omitempty"` // bytes bytes_field = 15;
	EnumField          AllTypes_EnumType       `protobuf:"varint,16,opt,name=enum_field,json=enumField,proto3,enum=alltypes.schema.AllTypes_EnumType" json:"enum_field,omitempty"`
	NestedMessageField *AllTypes_NestedMessage `protobuf:"bytes,17,opt,name=nested_message_field,json=nestedMessageField,proto3" json:"nested_message_field,omitempty"`
	// repeated field
	RepeatedIntField []int32 `protobuf:"varint,18,rep,packed,name=repeated_int_field,json=repeatedIntField,proto3" json:"repeated_int_field,omitempty"`
	// oneof field
	//
	// Types that are assignable to ExampleOneof:
	//
	//	*AllTypes_OneofString
	//	*AllTypes_OneofInt32
	//	*AllTypes_OneofEnum
	ExampleOneof isAllTypes_ExampleOneof `protobuf_oneof:"example_oneof"`
	// map field
	MapField map[string]int32 `protobuf:"bytes,22,rep,name=map_field,json=mapField,proto3" json:"map_field,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// timestamp
	TimestampField *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=timestamp_field,json=timestampField,proto3" json:"timestamp_field,omitempty"`
	// duration
	DurationField *durationpb.Duration `protobuf:"bytes,24,opt,name=duration_field,json=durationField,proto3" json:"duration_field,omitempty"`
	// any
	AnyField *anypb.Any `protobuf:"bytes,25,opt,name=any_field,json=anyField,proto3" json:"any_field,omitempty"`
}

func (x *AllTypes) Reset() {
	*x = AllTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alltypes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTypes) ProtoMessage() {}

func (x *AllTypes) ProtoReflect() protoreflect.Message {
	mi := &file_alltypes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTypes.ProtoReflect.Descriptor instead.
func (*AllTypes) Descriptor() ([]byte, []int) {
	return file_alltypes_proto_rawDescGZIP(), []int{0}
}

func (x *AllTypes) GetDoubleField() float64 {
	if x != nil {
		return x.DoubleField
	}
	return 0
}

func (x *AllTypes) GetFloatField() float32 {
	if x != nil {
		return x.FloatField
	}
	return 0
}

func (x *AllTypes) GetInt32Field() int32 {
	if x != nil {
		return x.Int32Field
	}
	return 0
}

func (x *AllTypes) GetInt64Field() int64 {
	if x != nil {
		return x.Int64Field
	}
	return 0
}

func (x *AllTypes) GetUint32Field() uint32 {
	if x != nil {
		return x.Uint32Field
	}
	return 0
}

func (x *AllTypes) GetUint64Field() uint64 {
	if x != nil {
		return x.Uint64Field
	}
	return 0
}

func (x *AllTypes) GetSint32Field() int32 {
	if x != nil {
		return x.Sint32Field
	}
	return 0
}

func (x *AllTypes) GetSint64Field() int64 {
	if x != nil {
		return x.Sint64Field
	}
	return 0
}

func (x *AllTypes) GetFixed32Field() uint32 {
	if x != nil {
		return x.Fixed32Field
	}
	return 0
}

func (x *AllTypes) GetFixed64Field() uint64 {
	if x != nil {
		return x.Fixed64Field
	}
	return 0
}

func (x *AllTypes) GetSfixed32Field() int32 {
	if x != nil {
		return x.Sfixed32Field
	}
	return 0
}

func (x *AllTypes) GetSfixed64Field() int64 {
	if x != nil {
		return x.Sfixed64Field
	}
	return 0
}

func (x *AllTypes) GetBoolField() bool {
	if x != nil {
		return x.BoolField
	}
	return false
}

func (x *AllTypes) GetStringField() string {
	if x != nil {
		return x.StringField
	}
	return ""
}

func (x *AllTypes) GetEnumField() AllTypes_EnumType {
	if x != nil {
		return x.EnumField
	}
	return AllTypes_DEFAULT
}

func (x *AllTypes) GetNestedMessageField() *AllTypes_NestedMessage {
	if x != nil {
		return x.NestedMessageField
	}
	return nil
}

func (x *AllTypes) GetRepeatedIntField() []int32 {
	if x != nil {
		return x.RepeatedIntField
	}
	return nil
}

func (m *AllTypes) GetExampleOneof() isAllTypes_ExampleOneof {
	if m != nil {
		return m.ExampleOneof
	}
	return nil
}

func (x *AllTypes) GetOneofString() string {
	if x, ok := x.GetExampleOneof().(*AllTypes_OneofString); ok {
		return x.OneofString
	}
	return ""
}

func (x *AllTypes) GetOneofInt32() int32 {
	if x, ok := x.GetExampleOneof().(*AllTypes_OneofInt32); ok {
		return x.OneofInt32
	}
	return 0
}

func (x *AllTypes) GetOneofEnum() AllTypes_EnumType {
	if x, ok := x.GetExampleOneof().(*AllTypes_OneofEnum); ok {
		return x.OneofEnum
	}
	return AllTypes_DEFAULT
}

func (x *AllTypes) GetMapField() map[string]int32 {
	if x != nil {
		return x.MapField
	}
	return nil
}

func (x *AllTypes) GetTimestampField() *timestamppb.Timestamp {
	if x != nil {
		return x.TimestampField
	}
	return nil
}

func (x *AllTypes) GetDurationField() *durationpb.Duration {
	if x != nil {
		return x.DurationField
	}
	return nil
}

func (x *AllTypes) GetAnyField() *anypb.Any {
	if x != nil {
		return x.AnyField
	}
	return nil
}

type isAllTypes_ExampleOneof interface {
	isAllTypes_ExampleOneof()
}

type AllTypes_OneofString struct {
	OneofString string `protobuf:"bytes,19,opt,name=oneof_string,json=oneofString,proto3,oneof"`
}

type AllTypes_OneofInt32 struct {
	OneofInt32 int32 `protobuf:"varint,20,opt,name=oneof_int32,json=oneofInt32,proto3,oneof"`
}

type AllTypes_OneofEnum struct {
	OneofEnum AllTypes_EnumType `protobuf:"varint,21,opt,name=oneof_enum,json=oneofEnum,proto3,enum=alltypes.schema.AllTypes_EnumType,oneof"`
}

func (*AllTypes_OneofString) isAllTypes_ExampleOneof() {}

func (*AllTypes_OneofInt32) isAllTypes_ExampleOneof() {}

func (*AllTypes_OneofEnum) isAllTypes_ExampleOneof() {}

// nested message
type AllTypes_NestedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AllTypes_NestedMessage) Reset() {
	*x = AllTypes_NestedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alltypes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTypes_NestedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTypes_NestedMessage) ProtoMessage() {}

func (x *AllTypes_NestedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_alltypes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTypes_NestedMessage.ProtoReflect.Descriptor instead.
func (*AllTypes_NestedMessage) Descriptor() ([]byte, []int) {
	return file_alltypes_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AllTypes_NestedMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AllTypes_NestedMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_alltypes_proto protoreflect.FileDescriptor

var file_alltypes_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x61, 0x6c, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x0a,
	0x0a, 0x08, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0b, 0x73, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x0b, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x0d,
	0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x10, 0x52, 0x0d, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x6c, 0x6c,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x41, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x65, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x59, 0x0a, 0x14, 0x6e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6c, 0x6c, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x12, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x69, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x12, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x10, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0b, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a,
	0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x43, 0x0a, 0x0a, 0x6f, 0x6e,
	0x65, 0x6f, 0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x61, 0x6c, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x12,
	0x44, 0x0a, 0x09, 0x6d, 0x61, 0x70, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x16, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6c, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x61,
	0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x61, 0x70,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x31, 0x0a, 0x09,
	0x61, 0x6e, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x61, 0x6e, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x1a,
	0x33, 0x0a, 0x0d, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x31, 0x0a, 0x08, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x31, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x32, 0x10, 0x02, 0x42, 0x0f, 0x0a, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f,
	0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x10, 0x5a, 0x0e, 0x61, 0x6c, 0x6c, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_alltypes_proto_rawDescOnce sync.Once
	file_alltypes_proto_rawDescData = file_alltypes_proto_rawDesc
)

func file_alltypes_proto_rawDescGZIP() []byte {
	file_alltypes_proto_rawDescOnce.Do(func() {
		file_alltypes_proto_rawDescData = protoimpl.X.CompressGZIP(file_alltypes_proto_rawDescData)
	})
	return file_alltypes_proto_rawDescData
}

var file_alltypes_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_alltypes_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_alltypes_proto_goTypes = []interface{}{
	(AllTypes_EnumType)(0),         // 0: alltypes.schema.AllTypes.EnumType
	(*AllTypes)(nil),               // 1: alltypes.schema.AllTypes
	(*AllTypes_NestedMessage)(nil), // 2: alltypes.schema.AllTypes.NestedMessage
	nil,                            // 3: alltypes.schema.AllTypes.MapFieldEntry
	(*timestamppb.Timestamp)(nil),  // 4: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),    // 5: google.protobuf.Duration
	(*anypb.Any)(nil),              // 6: google.protobuf.Any
}
var file_alltypes_proto_depIdxs = []int32{
	0, // 0: alltypes.schema.AllTypes.enum_field:type_name -> alltypes.schema.AllTypes.EnumType
	2, // 1: alltypes.schema.AllTypes.nested_message_field:type_name -> alltypes.schema.AllTypes.NestedMessage
	0, // 2: alltypes.schema.AllTypes.oneof_enum:type_name -> alltypes.schema.AllTypes.EnumType
	3, // 3: alltypes.schema.AllTypes.map_field:type_name -> alltypes.schema.AllTypes.MapFieldEntry
	4, // 4: alltypes.schema.AllTypes.timestamp_field:type_name -> google.protobuf.Timestamp
	5, // 5: alltypes.schema.AllTypes.duration_field:type_name -> google.protobuf.Duration
	6, // 6: alltypes.schema.AllTypes.any_field:type_name -> google.protobuf.Any
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_alltypes_proto_init() }
func file_alltypes_proto_init() {
	if File_alltypes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_alltypes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alltypes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllTypes_NestedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_alltypes_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AllTypes_OneofString)(nil),
		(*AllTypes_OneofInt32)(nil),
		(*AllTypes_OneofEnum)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_alltypes_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_alltypes_proto_goTypes,
		DependencyIndexes: file_alltypes_proto_depIdxs,
		EnumInfos:         file_alltypes_proto_enumTypes,
		MessageInfos:      file_alltypes_proto_msgTypes,
	}.Build()
	File_alltypes_proto = out.File
	file_alltypes_proto_rawDesc = nil
	file_alltypes_proto_goTypes = nil
	file_alltypes_proto_depIdxs = nil
}
