version: '3.8'

services:
  # compactor-0:
  #   extends:
  #     file: ../../docker/docker-compose-latest.yml
  #     service: compactor-0
  # compute-node-0:
  #   extends:
  #     file: ../../docker/docker-compose-latest.yml
  #     service: compute-node-0
  # etcd-0:
  #   extends:
  #     file: ../../docker/docker-compose-latest.yml
  #     service: etcd-0
  # frontend-node-0:
  #   extends:
  #     file: ../../docker/docker-compose-latest.yml
  #     service: frontend-node-0
  # meta-node-0:
  #   extends:
  #     file: ../../docker/docker-compose-latest.yml
  #     service: meta-node-0
  # grafana-0:
  #   extends:
  #     file: ../../docker/docker-compose.yml
  #     service: grafana-0
  # prometheus-0:
  #   extends:
  #     file: ../../docker/docker-compose.yml
  #     service: prometheus-0
  minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=hummockadmin
      - MINIO_ROOT_PASSWORD=hummockadmin
      - MINIO_DOMAIN=minio
    expose:
      - 9001
      - 9000
    command: ["server", "/data", "--console-address", ":9001"]

  mc:
    depends_on:
      - minio
    image: minio/mc
    environment:
      - AWS_ACCESS_KEY_ID=hummockadmin
      - AWS_SECRET_ACCESS_KEY=hummockadmin
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 hummockadmin hummockadmin) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/icebergdata;
      /usr/bin/mc mb minio/icebergdata;
      /usr/bin/mc anonymous set public minio/icebergdata;
      tail -f /dev/null
      "

  # mysql:
  #   image: mysql:8.0
  #   expose:
  #     -  3306
  #   ports:
  #     - "3306:3306"
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=123456
  #     - MYSQL_USER=mysqluser
  #     - MYSQL_PASSWORD=mysqlpw
  #     - MYSQL_DATABASE=mydb
  #   healthcheck:
  #     test: [ "CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u root -p123456" ]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #   container_name: mysql
  # prepare_mysql:
  #   image: mysql:8.0
  #   depends_on:
  #     - mysql
  #   command:
  #     - /bin/sh
  #     - -c
  #     - "mysql -p123456 -h mysql mydb < mysql_prepare.sql"
  #   volumes:
  #     - "./mysql_prepare.sql:/mysql_prepare.sql"
  #   container_name: prepare_mysql
  #   restart: on-failure
  # datagen:
  #   build: ../datagen
  #   depends_on: [mysql]
  #   command:
  #     - /bin/sh
  #     - -c
  #     - /datagen --mode clickstream --qps 1 mysql --user mysqluser --password mysqlpw --host mysql --port 3306 --db mydb
  #   container_name: datagen
  #   restart: on-failure

  rest:
    image: tabulario/iceberg-rest:0.6.0
    environment:
      - AWS_ACCESS_KEY_ID=hummockadmin
      - AWS_SECRET_ACCESS_KEY=hummockadmin
      - AWS_REGION=us-east-1
      - CATALOG_CATOLOG__IMPL=org.apache.iceberg.jdbc.JdbcCatalog
      - CATALOG_URI=jdbc:sqlite:file:/tmp/iceberg_rest_mode=memory
      - CATALOG_WAREHOUSE=s3://icebergdata/demo
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
    depends_on:
      - minio
      - mc
    links:
      - minio:icebergdata.minio
    expose:
      - 8181
    ports:
      - "8181:8181"
  
  spark:
    depends_on:
      - minio
      - rest
    build: ./spark
    environment:
      - AWS_ACCESS_KEY_ID=hummockadmin
      - AWS_SECRET_ACCESS_KEY=hummockadmin
      - AWS_REGION=us-east-1
      - SPARK_HOME=/opt/spark
      - PYSPARK_PYTON=/usr/bin/python3.9
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/spark/bin:/opt/spark/sbin
    user: root
    links:
      - minio:icebergdata.minio
    expose:
      - 15002
    ports:
      - "15002:15002"
    healthcheck:
      test: netstat -ltn | grep -c 15002
      interval: 1s
      retries: 1200
    volumes:
      - ./spark:/spark
    command: [ "bash", "/spark/spark-connect-server.sh" ]

volumes:
  compute-node-0:
    external: false
  etcd-0:
    external: false
  grafana-0:
    external: false
  minio-0:
    external: false
  prometheus-0:
    external: false
  spark:
    external: false
